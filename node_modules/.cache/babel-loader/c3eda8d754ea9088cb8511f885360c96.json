{"ast":null,"code":"var _jsxFileName = \"/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/src/components/Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\nimport Select from 'react-select';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nfunction Quiz(props) {\n  var questionType = props.questionType;\n  var startDate = moment('1991-10-03');\n\n  function renderAnswerOptions(key) {\n    return React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }\n\n  if (questionType == \"radiobutton\") {\n    return React.createElement(CSSTransitionGroup, {\n      className: \"container\",\n      component: \"div\",\n      transitionName: \"fade\",\n      transitionEnterTimeout: 800,\n      transitionLeaveTimeout: 500,\n      transitionAppear: true,\n      transitionAppearTimeout: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: props.questionId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(QuestionCount, {\n      counter: props.questionId,\n      total: props.questionTotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Question, {\n      content: props.question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"answerOptions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, props.answerOptions.map(renderAnswerOptions))));\n  }\n\n  if (questionType == \"dropdown\") {\n    return React.createElement(CSSTransitionGroup, {\n      className: \"container\",\n      component: \"div\",\n      transitionName: \"fade\",\n      transitionEnterTimeout: 800,\n      transitionLeaveTimeout: 500,\n      transitionAppear: true,\n      transitionAppearTimeout: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: props.questionId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(QuestionCount, {\n      counter: props.questionId,\n      total: props.questionTotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Question, {\n      content: props.question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Select, {\n      className: \"basic-single\",\n      classNamePrefix: \"select\",\n      defaultValue: props.answerOptions[0],\n      name: \"countries\",\n      options: props.answerOptions,\n      onChange: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })));\n  }\n\n  if (questionType == \"date\") {\n    return React.createElement(CSSTransitionGroup, {\n      className: \"container\",\n      component: \"div\",\n      transitionName: \"fade\",\n      transitionEnterTimeout: 800,\n      transitionLeaveTimeout: 500,\n      transitionAppear: true,\n      transitionAppearTimeout: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: props.questionId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(QuestionCount, {\n      counter: props.questionId,\n      total: props.questionTotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Question, {\n      content: props.question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      selected: moment('1991-10-03'),\n      startDate: moment('1991-10-03'),\n      onChange: props.onAnswerSelected,\n      showMonthDropdown: true,\n      showYearDropdown: true,\n      dropdownMode: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default Quiz;","map":{"version":3,"sources":["/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/src/components/Quiz.js"],"names":["React","PropTypes","CSSTransitionGroup","Question","QuestionCount","AnswerOption","Select","DatePicker","moment","Quiz","props","questionType","startDate","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","questionTotal","question","answerOptions","map","propTypes","string","isRequired","array","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\nimport Select from 'react-select'\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\n\nfunction Quiz(props) {\n  const questionType = props.questionType;\n  const startDate = moment('1991-10-03');\n \n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n  if (questionType == \"radiobutton\") {\n    return (\n      <CSSTransitionGroup\n        className=\"container\"\n        component=\"div\"\n        transitionName=\"fade\"\n        transitionEnterTimeout={800}\n        transitionLeaveTimeout={500}\n        transitionAppear\n        transitionAppearTimeout={500}\n      >\n        <div key={props.questionId}>\n          <QuestionCount counter={props.questionId} total={props.questionTotal} />\n          <Question content={props.question} />\n            <ul className=\"answerOptions\">\n              {props.answerOptions.map(renderAnswerOptions)}\n            </ul>\n        </div>\n      </CSSTransitionGroup>\n    );\n  }\n  if (questionType == \"dropdown\") {\n    return (\n      <CSSTransitionGroup\n        className=\"container\"\n        component=\"div\"\n        transitionName=\"fade\"\n        transitionEnterTimeout={800}\n        transitionLeaveTimeout={500}\n        transitionAppear\n        transitionAppearTimeout={500}\n      >\n        <div key={props.questionId}>\n          <QuestionCount counter={props.questionId} total={props.questionTotal} />\n          <Question content={props.question} />\n          <Select\n            className=\"basic-single\"\n            classNamePrefix=\"select\"\n            defaultValue={props.answerOptions[0]}\n            name=\"countries\"\n            options={props.answerOptions}\n            onChange={props.onAnswerSelected}\n          />\n\n        </div>\n      </CSSTransitionGroup>\n    );\n  }\n\n  if (questionType == \"date\") {\n    return (\n      <CSSTransitionGroup\n        className=\"container\"\n        component=\"div\"\n        transitionName=\"fade\"\n        transitionEnterTimeout={800}\n        transitionLeaveTimeout={500}\n        transitionAppear\n        transitionAppearTimeout={500}\n      >\n        <div key={props.questionId}>\n          <QuestionCount counter={props.questionId} total={props.questionTotal} />\n          <Question content={props.question} />\n          <DatePicker\n            selected={moment('1991-10-03')}\n            startDate={moment('1991-10-03')}\n            onChange={props.onAnswerSelected}\n            showMonthDropdown\n            showYearDropdown\n            dropdownMode=\"select\"\n          />\n\n        </div>\n      </CSSTransitionGroup>\n    );\n  }\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}