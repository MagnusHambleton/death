{"ast":null,"code":"var _jsxFileName = \"/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/src/components/AnswerOption.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  var questionType = props.questionType;\n\n  if (questionType == \"radiobutton\") {\n    return React.createElement(\"li\", {\n      className: \"answerOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"radioCustomButton\",\n      name: \"radioGroup\",\n      checked: props.answerType === props.answer,\n      id: props.answerType,\n      value: props.answerType,\n      disabled: props.answer,\n      onChange: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"radioCustomLabel\",\n      htmlFor: props.answerType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, props.answerContent));\n  }\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default AnswerOption;","map":{"version":3,"sources":["/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/src/components/AnswerOption.js"],"names":["React","PropTypes","AnswerOption","props","questionType","answerType","answer","onAnswerSelected","answerContent","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAMC,YAAY,GAAGD,KAAK,CAACC,YAA3B;;AACA,MAAIA,YAAY,IAAI,aAApB,EAAmC;AACjC,WACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,IAAI,EAAC,YAHP;AAIE,MAAA,OAAO,EAAED,KAAK,CAACE,UAAN,KAAqBF,KAAK,CAACG,MAJtC;AAKE,MAAA,EAAE,EAAEH,KAAK,CAACE,UALZ;AAME,MAAA,KAAK,EAAEF,KAAK,CAACE,UANf;AAOE,MAAA,QAAQ,EAAEF,KAAK,CAACG,MAPlB;AAQE,MAAA,QAAQ,EAAEH,KAAK,CAACI,gBARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAEJ,KAAK,CAACE,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,KAAK,CAACK,aADT,CAXF,CADF;AAiBD;AACF;;AAEDN,YAAY,CAACO,SAAb,GAAyB;AACvBJ,EAAAA,UAAU,EAAEJ,SAAS,CAACS,MAAV,CAAiBC,UADN;AAEvBH,EAAAA,aAAa,EAAEP,SAAS,CAACS,MAAV,CAAiBC,UAFT;AAGvBL,EAAAA,MAAM,EAAEL,SAAS,CAACS,MAAV,CAAiBC,UAHF;AAIvBJ,EAAAA,gBAAgB,EAAEN,SAAS,CAACW,IAAV,CAAeD;AAJV,CAAzB;AAOA,eAAeT,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  const questionType = props.questionType;\n  if (questionType == \"radiobutton\") {  \n    return (\n      <li className=\"answerOption\">\n        <input\n          type=\"radio\"\n          className=\"radioCustomButton\"\n          name=\"radioGroup\"\n          checked={props.answerType === props.answer}\n          id={props.answerType}\n          value={props.answerType}\n          disabled={props.answer}\n          onChange={props.onAnswerSelected}\n        />\n        <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n          {props.answerContent}\n        </label>\n      </li>\n    );\n  }\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;\n"]},"metadata":{},"sourceType":"module"}