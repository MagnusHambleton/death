{"ast":null,"code":"var _jsxFileName = \"/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/src/components/Result.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport lifeExpectancies from '../api/lifeExpectancies';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\n\nfunction Result(props) {\n  var ageAtDeath = props.dateOfDeath.diff(props.birthday, 'years');\n  var yearsFromNow = props.dateOfDeath.diff(moment(), 'years');\n  var fiftyYearAnniversary = pros.dateOfDeath.clone().sub(50, 'year');\n  return React.createElement(CSSTransitionGroup, {\n    className: \"container result\",\n    component: \"div\",\n    transitionName: \"fade\",\n    transitionEnterTimeout: 800,\n    transitionLeaveTimeout: 500,\n    transitionAppear: true,\n    transitionAppearTimeout: 500,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"You will die in \", yearsFromNow, \" years time on \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.dateOfDeath.format(\"dddd [the] Do [of] MMMM YYYY\")), \", at an age of \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, ageAtDeath), \" years\"), React.createElement(ButtonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Default\"), React.createElement(Button, {\n    bsStyle: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Primary\"), React.createElement(Button, {\n    bsStyle: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Success\"), React.createElement(Button, {\n    bsStyle: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Info\"), React.createElement(Button, {\n    bsStyle: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Warning\"), React.createElement(Button, {\n    bsStyle: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Danger\"), React.createElement(Button, {\n    bsStyle: \"link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Link\")), \";\");\n}\n\nexport default Result;","map":{"version":3,"sources":["/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/src/components/Result.js"],"names":["React","PropTypes","lifeExpectancies","CSSTransitionGroup","moment","AddToCalendar","Result","props","ageAtDeath","dateOfDeath","diff","birthday","yearsFromNow","fiftyYearAnniversary","pros","clone","sub","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAGrB,MAAMC,UAAU,GAAGD,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuBH,KAAK,CAACI,QAA7B,EAAuC,OAAvC,CAAnB;AACA,MAAMC,YAAY,GAAGL,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuBN,MAAM,EAA7B,EAAgC,OAAhC,CAArB;AACA,MAAMS,oBAAoB,GAAGC,IAAI,CAACL,WAAL,CAAiBM,KAAjB,GAAyBC,GAAzB,CAA6B,EAA7B,EAAgC,MAAhC,CAA7B;AACA,SACE,oBAAC,kBAAD;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,cAAc,EAAC,MAHjB;AAIE,IAAA,sBAAsB,EAAE,GAJ1B;AAKE,IAAA,sBAAsB,EAAE,GAL1B;AAME,IAAA,gBAAgB,MANlB;AAOE,IAAA,uBAAuB,EAAE,GAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACmBJ,YADnB,qBAC+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASL,KAAK,CAACE,WAAN,CAAkBQ,MAAlB,CAAyB,8BAAzB,CAAT,CAD/C,qBACyI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAST,UAAT,CADzI,WATF,EAYE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAKE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,EAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,EAWE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAcE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF,EAiBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,EAoBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,CAZF,MADF;AAqCD;;AAED,eAAeF,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport lifeExpectancies from '../api/lifeExpectancies';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport moment from 'moment';\nimport AddToCalendar from 'react-add-to-calendar';\n\nfunction Result(props) {\n\n\n  const ageAtDeath = props.dateOfDeath.diff(props.birthday, 'years');\n  const yearsFromNow = props.dateOfDeath.diff(moment(),'years');\n  const fiftyYearAnniversary = pros.dateOfDeath.clone().sub(50,'year')\n  return (\n    <CSSTransitionGroup\n      className=\"container result\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div>\n        You will die in {yearsFromNow} years time on <strong>{props.dateOfDeath.format(\"dddd [the] Do [of] MMMM YYYY\")}</strong>, at an age of <strong>{ageAtDeath}</strong> years\n      </div>\n      <ButtonToolbar>\n        {/* Standard button */}\n        <Button>Default</Button>\n\n        {/* Provides extra visual weight and identifies the primary action in a set of buttons */}\n        <Button bsStyle=\"primary\">Primary</Button>\n\n        {/* Indicates a successful or positive action */}\n        <Button bsStyle=\"success\">Success</Button>\n\n        {/* Contextual button for informational alert messages */}\n        <Button bsStyle=\"info\">Info</Button>\n\n        {/* Indicates caution should be taken with this action */}\n        <Button bsStyle=\"warning\">Warning</Button>\n\n        {/* Indicates a dangerous or potentially negative action */}\n        <Button bsStyle=\"danger\">Danger</Button>\n\n        {/* Deemphasize a button by making it look like a link while maintaining button behavior */}\n        <Button bsStyle=\"link\">Link</Button>\n      </ButtonToolbar>;\n    </CSSTransitionGroup>\n  );\n}\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}