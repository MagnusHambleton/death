{"ast":null,"code":"import _objectSpread from \"/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/src/App.js\";\nimport React, { Component } from 'react';\nimport quizQuestions from './api/quizQuestions';\nimport lifeExpectancies from './api/lifeExpectancies';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport logo from \"./svg/logo.svg\";\nimport './App.css';\nimport moment from 'moment'; // source of data: http://databank.worldbank.org/data/reports.aspx?source=2&series=SP.DYN.LE00.MA.IN&country=#\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = (_this$state = {\n      counter: 0,\n      questionId: 1,\n      country: '',\n      year: 0,\n      month: 0,\n      date: 0,\n      gender: '',\n      smoker: '',\n      question: '',\n      answerOptions: [],\n      answer: '',\n      birthday: ''\n    }, _defineProperty(_this$state, \"date\", moment('1991-10-03')), _defineProperty(_this$state, \"startDate\", moment('1991-10-03')), _defineProperty(_this$state, \"answersCount\", {\n      Nintendo: 0,\n      Microsoft: 0,\n      Sony: 0\n    }), _defineProperty(_this$state, \"result\", ''), _defineProperty(_this$state, \"lifeTable\", lifeExpectancies['male']['Sweden']), _this$state); //alert(lifeExpectancies[\"male\"][\"Sweden\"]);\n\n    _this.handleAnswerSelected = _this.handleAnswerSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var shuffledAnswerOptions = quizQuestions.map(function (question) {\n        return question.answers;\n      });\n      this.setState({\n        questionType: quizQuestions[0].questionType,\n        question: quizQuestions[0].question,\n        answerOptions: shuffledAnswerOptions[0]\n      });\n    }\n  }, {\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      var currentIndex = array.length,\n          temporaryValue,\n          randomIndex;\n      return array;\n    }\n  }, {\n    key: \"handleAnswerSelected\",\n    value: function handleAnswerSelected(event) {\n      var _this2 = this;\n\n      if (quizQuestions[this.state.questionId - 1].questionType == \"radiobutton\") {\n        this.setUserAnswer(event.currentTarget.value, quizQuestions[this.state.questionId - 1].answerInfo);\n      }\n\n      if (quizQuestions[this.state.questionId - 1].questionType == \"date\") {\n        this.setUserAnswer(event.format(), quizQuestions[this.state.questionId - 1].answerInfo);\n      } else {\n        this.setUserAnswer(event.value, quizQuestions[this.state.questionId - 1].answerInfo);\n      }\n\n      if (this.state.questionId < quizQuestions.length) {\n        setTimeout(function () {\n          return _this2.setNextQuestion();\n        }, 300);\n      } else {\n        setTimeout(function () {\n          return _this2.setResults(_this2.getResults());\n        }, 300);\n      }\n    }\n  }, {\n    key: \"setUserAnswer\",\n    value: function setUserAnswer(answer, answerInfo) {\n      this.setState(function (state, props) {\n        return {\n          answersCount: _objectSpread({}, state.answersCount, _defineProperty({}, answer, state.answersCount[answer] + 1)),\n          answer: answer\n        };\n      });\n\n      if (answerInfo == \"Country\") {\n        this.setState(function (state, props) {\n          return {\n            country: answer\n          };\n        });\n      }\n\n      if (answerInfo == \"Birthday\") {\n        this.setState(function (state, props) {\n          return {\n            birthday: answer\n          };\n        });\n      }\n\n      if (answerInfo == \"Gender\") {\n        this.setState(function (state, props) {\n          return {\n            gender: answer\n          };\n        });\n      }\n\n      if (answerInfo == \"Smoker\") {\n        this.setState(function (state, props) {\n          return {\n            smoker: answer\n          };\n        });\n      }\n    }\n  }, {\n    key: \"setNextQuestion\",\n    value: function setNextQuestion() {\n      var counter = this.state.counter + 1;\n      var questionId = this.state.questionId + 1;\n      this.setState({\n        counter: counter,\n        questionId: questionId,\n        questionType: quizQuestions[counter].questionType,\n        question: quizQuestions[counter].question,\n        answerOptions: quizQuestions[counter].answers,\n        answer: ''\n      });\n    }\n  }, {\n    key: \"getResults\",\n    value: function getResults() {\n      var answersCount = this.state.answersCount;\n      var answersCountKeys = Object.keys(answersCount);\n      var answersCountValues = answersCountKeys.map(function (key) {\n        return answersCount[key];\n      });\n      var maxAnswerCount = Math.max.apply(null, answersCountValues);\n      return answersCountKeys.filter(function (key) {\n        return answersCount[key] === maxAnswerCount;\n      });\n    }\n  }, {\n    key: \"setResults\",\n    value: function setResults(result) {\n      if (result.length === 1) {\n        this.setState({\n          result: result[0]\n        });\n      } else {\n        this.setState({\n          result: 'Undetermined'\n        });\n      }\n    }\n  }, {\n    key: \"renderQuiz\",\n    value: function renderQuiz() {\n      return React.createElement(Quiz, {\n        questionType: this.state.questionType,\n        answer: this.state.answer,\n        answerOptions: this.state.answerOptions,\n        questionId: this.state.questionId,\n        question: this.state.question,\n        questionTotal: quizQuestions.length,\n        onAnswerSelected: this.handleAnswerSelected,\n        startDate: this.startDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderResult\",\n    value: function renderResult() {\n      return React.createElement(Result, {\n        quizResult: this.state.result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"React Quiz\")), this.state.result ? this.renderResult() : this.renderQuiz());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/magnushambleton/Google Drive/Coding/Death/death_quiz/react-multi-choice-quiz/src/App.js"],"names":["React","Component","quizQuestions","lifeExpectancies","Quiz","Result","moment","App","props","state","counter","questionId","country","year","month","date","gender","smoker","question","answerOptions","answer","birthday","Nintendo","Microsoft","Sony","handleAnswerSelected","bind","shuffledAnswerOptions","map","answers","setState","questionType","array","currentIndex","length","temporaryValue","randomIndex","event","setUserAnswer","currentTarget","value","answerInfo","format","setTimeout","setNextQuestion","setResults","getResults","answersCount","answersCountKeys","Object","keys","answersCountValues","key","maxAnswerCount","Math","max","apply","filter","result","startDate","logo","renderResult","renderQuiz"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport quizQuestions from './api/quizQuestions';\nimport lifeExpectancies from './api/lifeExpectancies';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport logo from './svg/logo.svg';\nimport './App.css';\nimport moment from 'moment';\n\n// source of data: http://databank.worldbank.org/data/reports.aspx?source=2&series=SP.DYN.LE00.MA.IN&country=#\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      country:'',\n      year: 0,\n      month: 0,\n      date: 0,\n      gender: '',\n      smoker: '',\n      question: '',\n      answerOptions: [],\n      answer: '',\n      birthday: '',\n      date: moment('1991-10-03'),\n      startDate: moment('1991-10-03'),\n      answersCount: {\n        Nintendo: 0,\n        Microsoft: 0,\n        Sony: 0\n      },\n      result: '',\n      lifeTable: lifeExpectancies['male']['Sweden']\n\n    };\n    //alert(lifeExpectancies[\"male\"][\"Sweden\"]);\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentWillMount() {\n    const shuffledAnswerOptions = quizQuestions.map(question =>\n      question.answers);\n    this.setState({\n      questionType: quizQuestions[0].questionType,\n      question: quizQuestions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n\n  shuffleArray(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    return array;\n  }\n\n  handleAnswerSelected(event) {\n    if(quizQuestions[this.state.questionId-1].questionType == \"radiobutton\") {\n      this.setUserAnswer(event.currentTarget.value, quizQuestions[this.state.questionId-1].answerInfo);\n    } \n    if(quizQuestions[this.state.questionId-1].questionType == \"date\") {\n      this.setUserAnswer(event.format(), quizQuestions[this.state.questionId-1].answerInfo);\n\n    } else {\n      this.setUserAnswer(event.value, quizQuestions[this.state.questionId-1].answerInfo);\n    }\n\n\n    if (this.state.questionId < quizQuestions.length) {\n      setTimeout(() => this.setNextQuestion(), 300);\n    } else {\n      setTimeout(() => this.setResults(this.getResults()), 300);\n    }\n  }\n\n  setUserAnswer(answer, answerInfo) {\n    this.setState((state, props) => ({\n      answersCount: {\n        ...state.answersCount,\n        [answer]: state.answersCount[answer] + 1\n      },\n      answer: answer\n    }));\n    if (answerInfo == \"Country\") {\n      this.setState((state,props) => ({country: answer}));\n    }\n    if (answerInfo == \"Birthday\") {\n      this.setState((state,props) => ({birthday: answer}));\n    }\n    if (answerInfo == \"Gender\") {\n      this.setState((state,props) => ({gender: answer}));\n    }\n    if (answerInfo == \"Smoker\") {\n      this.setState((state,props) => ({smoker: answer}));\n    }\n  }\n\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      questionType: quizQuestions[counter].questionType,\n      question: quizQuestions[counter].question,\n      answerOptions: quizQuestions[counter].answers,\n      answer: ''\n    });\n  }\n\n  getResults() {\n    const answersCount = this.state.answersCount;\n    const answersCountKeys = Object.keys(answersCount);\n    const answersCountValues = answersCountKeys.map(key => answersCount[key]);\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\n\n    return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\n  }\n\n  setResults(result) {\n    if (result.length === 1) {\n      this.setState({ result: result[0] });\n    } else {\n      this.setState({ result: 'Undetermined' });\n    }\n  }\n\n  renderQuiz() {\n    return (\n      <Quiz\n        questionType={this.state.questionType}\n        answer={this.state.answer}\n        answerOptions={this.state.answerOptions}\n        questionId={this.state.questionId}\n        question={this.state.question}\n        questionTotal={quizQuestions.length}\n        onAnswerSelected={this.handleAnswerSelected}\n        startDate={this.startDate}\n      />\n    );\n  }\n\n  renderResult() {\n    return <Result quizResult={this.state.result} />;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>React Quiz</h2>\n        </div>\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}